<!-- views/partials/header.ejs -->
<nav class="navbar navbar-expand-sm bg-primary navbar-dark nav-mycol rounded-top">
	<div class="container-fluid">
		<div class="navbar-header nav-justified">
			<h1 class="text-light">&lt;Matcha/&gt;</h1>
			<ul class="nav navbar-nav">
				<li class="nav-item"><a class="nav-link" href="/">Home</a></li>
				<%
				if (!user) {%>
				<li class="nav-item"><a class="nav-link" href="/login">Login</a></li>
				<li class="nav-item"><a class="nav-link" href="/signup">Signup</a></li>
				<% } else {
					if (user['type'] === 'Admin') {
						%>
							<li class="nav-item"><a class="nav-link" href="/user/admin">Admin Panel</a></li>
						<%
					}
					var blockCount = user['blocks'].length;
					var likeCount = user['likes'].length;
					var likedUsers = user['likes'] != null ? user['likes'] : [];
					var likedBy = user['likedBy'] != null ? user['likedBy'] : [];
					var matchCount = 0;
					likedUsers.forEach(likes => {
						likedBy.forEach(liked => {
							if (likes == liked)
								matchCount++;
						})
					})
					%>
					<li class="nav-item"><a class="nav-link" href="/likes">Likes(<%= likeCount %>)</a></li>
					<li class="nav-item"><a class="nav-link" href="/myViews">Viewed_By</a></li>
					<li class="nav-item"><a class="nav-link" href="/blocks">Blocks(<%= blockCount %>)</a></li>
					<li class="nav-item"><a class="nav-link" href="/matches">Matches(<%= matchCount %>)</a></li>
					<script src="../js/notification.js"></script>
					<li class="nav-item"><a class="nav-link" href="/notification"><i class="fas fa-bell" id="notification"></i></a></li>
					<li class="nav-item"><a class="nav-link" href="/profile">Profile</a></li>
                    <li class="nav-item"><a class="nav-link" href="/chat">chat</a></li>
					<li class="nav-item"><a class="nav-link" href="/logout/user">Logout</a></li>
				<%}%>
			</ul>
		</div>
	</div>
</nav>
<% 
	Number.prototype.toFixedDown = function(digits) {
		var re = new RegExp("(\\d+\\.\\d{" + digits + "})(\\d)"),
			m = this.toString().match(re);
		return m ? parseFloat(m[1]) : this.valueOf();
	};
%>
